{{- $username := pluck "username" .Values.global.admin .Values.registerAdmin.admin | compact | first | quote }}
{{- $name := pluck "name" .Values.global.admin .Values.registerAdmin.admin | compact | first | quote }}
{{- $surname := pluck "surname" .Values.global.admin .Values.registerAdmin.admin | compact | first | quote }}
{{- $email := pluck "email" .Values.global.admin .Values.registerAdmin.admin | compact | first | quote }}
{{- $additionalInitContainers := (include "czertainly.customization.initContainers" $) }}
{{- $additionalSidecarContainers := (include "czertainly.customization.sidecarContainers" $) }}
{{- $additionalVolumes := (include "czertainly.customization.volumes" $) }}
{{- $additionalVolumeMounts := (include "czertainly.customization.volumeMounts" $) }}
{{- $additionalEnv := (include "czertainly.customization.env" $) }}
{{- $additionalEnvFrom := (include "czertainly.customization.envFrom" $) }}
{{- $scripts := or .Values.global.keycloak.enabled .Values.registerAdmin.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: core-deployment
  labels:
    {{- include "czertainly.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "czertainly.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "czertainly.selectorLabels" . | nindent 8 }}
      annotations:
        # annotation for vault-agent
        # when the list of the trusted certificates is changed, restart deployment
        checksum/config: {{ include (print $.Template.BasePath "/trusted-certificates-secret.yaml") . | sha256sum }}
        # when the messaging secrets are changed, restart deployment
        checksum/mq-secret: {{ include "czertainly-lib.messaging.secrets" (dict "global" .Values.global "messagingService" .Values.messagingService "release" .Release) | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- include "czertainly.imagePullSecrets" . | indent 6 }}
      {{- if .Values.podSecurityContext }}
      securityContext: {{- .Values.podSecurityContext | toYaml | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-auth-service
          image: {{ include "czertainly.curl.image" . }}
          imagePullPolicy: {{ .Values.curl.image.pullPolicy }}
          {{- if .Values.curl.image.securityContext }}
          securityContext: {{- .Values.curl.image.securityContext | toYaml | nindent 12 }}
          {{- end }}
          command:
            - /bin/sh
            - -c
            - |
              while ! nc -z auth-service {{ .Values.authService.service.port }}; do sleep 1; done &&
              while ! nc -z auth-opa-policies-service {{ .Values.authOpaPolicies.service.port }}; do sleep 1; done &&
              echo "auth service seems to be started" &&
              while ! nc -z messaging-service {{ .Values.messagingService.service.client.amqp.port }}; do sleep 1; done &&
              while ! nc -z scheduler-service-service {{ .Values.schedulerService.service.port }}; do sleep 1; done &&
              echo "messaging and scheduler service seems to be started"
        {{- if $additionalInitContainers }}
          {{- $additionalInitContainers | nindent 8 }}
        {{- end }}
      containers:
        - name: czertainly-auth-opa
          image: {{ include "czertainly.opa.image" . }}
          imagePullPolicy: {{ .Values.opa.image.pullPolicy }}
          ports:
            - containerPort: 8181
          {{- if .Values.opa.image.securityContext }}
          securityContext: {{- .Values.opa.image.securityContext | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.opa.image.probes.liveness.enabled }}
          livenessProbe:
            {{- if .Values.opa.image.probes.liveness.custom }}
            {{- toYaml .Values.opa.image.probes.liveness.custom | nindent 12 }}
            {{- else }}
            httpGet:
              scheme: HTTP
              port: 8181
            {{- end }}
            initialDelaySeconds: {{ .Values.opa.image.probes.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.opa.image.probes.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.opa.image.probes.liveness.periodSeconds }}
            successThreshold: {{ .Values.opa.image.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.opa.image.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.opa.image.probes.readiness.enabled }}
          readinessProbe:
            {{- if .Values.opa.image.probes.readiness.custom }}
            {{- toYaml .Values.opa.image.probes.readiness.custom | nindent 12 }}
            {{- else }}
            httpGet:
              path: /health?bundle=true
              scheme: HTTP
              port: 8181
            {{- end }}
            initialDelaySeconds: {{ .Values.opa.image.probes.readiness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.opa.image.probes.readiness.timeoutSeconds }}
            periodSeconds: {{ .Values.opa.image.probes.readiness.periodSeconds }}
            successThreshold: {{ .Values.opa.image.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.opa.image.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.opa.image.probes.startup.enabled }}
          startupProbe:
            {{- if .Values.opa.image.probes.startup.custom }}
            {{- toYaml .Values.opa.image.probes.startup.custom | nindent 12 }}
            {{- else }}
            httpGet:
              path: /health?bundle=true
              scheme: HTTP
              port: 8181
            {{- end }}
            initialDelaySeconds: {{ .Values.opa.image.probes.startup.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.opa.image.probes.startup.timeoutSeconds }}
            periodSeconds: {{ .Values.opa.image.probes.startup.periodSeconds }}
            successThreshold: {{ .Values.opa.image.probes.startup.successThreshold }}
            failureThreshold: {{ .Values.opa.image.probes.startup.failureThreshold }}
          {{- end }}
          {{- if .Values.opa.image.resources }}
          resources: {{- toYaml .Values.opa.image.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.opa.image.command }}
          command: {{- include "czertainly.opa.image.command" . | nindent 12 }}
          {{- end }}
          {{- if .Values.opa.image.args }}
          args: {{- include "czertainly.opa.image.args" . | nindent 12 }}
          {{- else }}
          args:
            - "run"
            - "--server"
            - "--set=services.nginx.url=http://auth-opa-policies-service:{{ .Values.authOpaPolicies.service.port }}"
            - "--set=bundles.nginx.service=nginx"
            - "--set=bundles.nginx.resource=bundles/bundle.tar.gz"
          {{- end }}
        - name: czertainly-core
          image: {{ include "czertainly.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.image.command }}
          command: {{- include "czertainly.image.command" . | nindent 12 }}
          {{- end }}
          {{- if .Values.image.args }}
          args: {{- include "czertainly.image.args" . | nindent 12 }}
          {{- end }}
          env:
            - name: HEADER_ENABLED
              value: "true"
            - name: HEADER_NAME
              value: {{ .Values.auth.header.certificate | quote }}
            {{- if .Values.global.httpProxy }}
            - name: HTTP_PROXY
              value: {{ .Values.global.httpProxy }}
            {{- end }}
            {{- if .Values.global.httpsProxy }}
            - name: HTTPS_PROXY
              value: {{ .Values.global.httpsProxy }}
            {{- end }}
            {{- if .Values.global.noProxy }}
            - name: NO_PROXY
              value: {{ .Values.global.noProxy }}
            {{- end }}
            - name: JDBC_URL
              value: {{ include "czertainly-lib.util.format.jdbcUrl" (list . "?characterEncoding=UTF-8") | quote }}
            - name: JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: core-secret
                  key: jdbcUsername
            - name: JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: core-secret
                  key: jdbcPassword
            - name: LOGGING_LEVEL_COM_CZERTAINLY
              value: {{ .Values.logging.level | quote }}
            {{- if .Values.registerAdmin.enabled }}
            - name: ADMIN_CERT
              valueFrom:
                secretKeyRef:
                  name: admin-certificate-secret
                  key: tls.crt
            {{- end }}
            - name: OPA_BASE_URL
              value: "http://localhost:8181"
            - name: AUTH_SERVICE_BASE_URL
              value: "http://auth-service:{{ .Values.authService.service.port }}"
            {{- if or .Values.global.trusted.certificates .Values.trusted.certificates }}
            - name: TRUSTED_CERTIFICATES
              valueFrom:
                secretKeyRef:
                  name: trusted-certificates
                  key: ca.crt
            {{- end }}
            - name: JAVA_OPTS
              value: {{ .Values.javaOpts | quote }}
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: global-configmap
                  key: messaging.host
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: global-configmap
                  key: messaging.amqp.port
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: global-secret
                  key: messaging.username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: global-secret
                  key: messaging.password
            - name: SCHEDULER_BASE_URL
              value: "http://scheduler-service-service:{{ .Values.schedulerService.service.port }}"
            {{- if .Values.global.keycloak.enabled }}
            - name: INTERNAL_OAUTH_SECRET
              value: {{ .Values.global.keycloak.clientSecret | quote }}
            {{- end }}
            {{- if $additionalEnv }}
              {{- $additionalEnv | nindent 12 }}
            {{- end }}
          {{- if $additionalEnvFrom }}
          envFrom:
            {{- $additionalEnvFrom | indent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.port }}
          {{- if .Values.image.securityContext }}
          securityContext: {{- .Values.image.securityContext | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.image.probes.liveness.enabled }}
          livenessProbe:
            {{- if .Values.image.probes.liveness.custom }}
            {{- toYaml .Values.image.probes.liveness.custom | nindent 12 }}
            {{- else }}
            httpGet:
              path: /api/v1/health/liveness
              port: {{ .Values.service.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.image.probes.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.image.probes.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.image.probes.liveness.periodSeconds }}
            successThreshold: {{ .Values.image.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.image.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.image.probes.readiness.enabled }}
          readinessProbe:
            {{- if .Values.image.probes.readiness.custom }}
            {{- toYaml .Values.image.probes.readiness.custom | nindent 12 }}
            {{- else }}
            httpGet:
              path: /api/v1/health/readiness
              port: {{ .Values.service.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.image.probes.readiness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.image.probes.readiness.timeoutSeconds }}
            periodSeconds: {{ .Values.image.probes.readiness.periodSeconds }}
            successThreshold: {{ .Values.image.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.image.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.image.probes.startup.enabled }}
          startupProbe:
            {{- if .Values.image.probes.startup.custom }}
            {{- toYaml .Values.image.probes.startup.custom | nindent 12 }}
            {{- else }}
            httpGet:
              path: /api/v1/health/liveness
              port: {{ .Values.service.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.image.probes.startup.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.image.probes.startup.timeoutSeconds }}
            periodSeconds: {{ .Values.image.probes.startup.periodSeconds }}
            successThreshold: {{ .Values.image.probes.startup.successThreshold }}
            failureThreshold: {{ .Values.image.probes.startup.failureThreshold }}
          {{- end }}
          {{- if .Values.image.resources }}
          resources: {{- toYaml .Values.image.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /tmp
              name: ephemeral
            {{- if $scripts }}
            - mountPath: /opt/czertainly/scripts
              name: core-scripts
            {{- end }}
            {{- if $additionalVolumeMounts }}
              {{- $additionalVolumeMounts | nindent 12 }}
            {{- end }}
          {{- if $scripts }}
          lifecycle:
            postStart:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - |
                    {{- if .Values.registerAdmin.enabled }}
                    /opt/czertainly/scripts/register-admin.sh;
                    {{- end }}
                    {{- if .Values.global.keycloak.enabled }}
                    /opt/czertainly/scripts/register-internal-keycloak.sh $INTERNAL_OAUTH_SECRET;
                    {{- end }}
          {{- end }}
        {{- if $additionalSidecarContainers }}
          {{- $additionalSidecarContainers | nindent 8 }}
        {{- end }}
      volumes:
        - name: ephemeral
          {{- include "czertainly.ephemeralVolume" . | indent 10 }}
        {{- if $scripts }}
        - name: core-scripts
          configMap:
            name: core-scripts-configmap
            defaultMode: 0777
        {{- end }}
        {{- if $additionalVolumes }}
          {{- $additionalVolumes | nindent 8 }}
        {{- end }}
