{{- $additionalInitContainers := (include "email-notification-provider.customization.initContainers" $) }}
{{- $additionalSidecarContainers := (include "email-notification-provider.customization.sidecarContainers" $) }}
{{- $additionalVolumes := (include "email-notification-provider.customization.volumes" $) }}
{{- $additionalVolumeMounts := (include "email-notification-provider.customization.volumeMounts" $) }}
{{- $additionalEnv := (include "email-notification-provider.customization.env" $) }}
{{- $additionalEnvFrom := (include "email-notification-provider.customization.envFrom" $) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: email-notification-provider-deployment
  labels:
    {{- include "email-notification-provider.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "email-notification-provider.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "email-notification-provider.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- include "email-notification-provider.imagePullSecrets" . | indent 6 }}
      {{- if .Values.podSecurityContext }}
      securityContext: {{- .Values.podSecurityContext | toYaml | nindent 8 }}
      {{- end }}
      {{- if $additionalInitContainers }}
      initContainers:
        {{- $additionalInitContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: email-notification-provider
          image: {{ include "email-notification-provider.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.image.command }}
          command: {{- include "email-notification-provider.image.command" . | nindent 12 }}
          {{- end }}
          {{- if .Values.image.args }}
          args: {{- include "email-notification-provider.image.args" . | nindent 12 }}
          {{- end }}
          env:
            - name: PORT
              value: {{ .Values.service.port | quote }}
            - name: LOGGING_LEVEL_COM_CZERTAINLY
              value: {{ .Values.logging.level | quote }}
            - name: JDBC_URL
              value: {{ include "czertainly-lib.util.format.jdbcUrl" (list . "?characterEncoding=UTF-8") | quote }}
            - name: JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: email-notification-provider-secret
                  key: dbUsername
            - name: JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: email-notification-provider-secret
                  key: dbPassword
            - name: JAVA_OPTS
              value: {{ .Values.javaOpts | quote }}
            - name: SMTP_HOST
              value: {{ .Values.smtp.host | quote }}
            - name: SMTP_PORT
              value: {{ .Values.smtp.port | quote }}
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: email-notification-provider-secret
                  key: smtpUsername
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: email-notification-provider-secret
                  key: smtpPassword
            - name: SMTP_AUTH
              value: {{ .Values.smtp.auth | quote }}
            - name: SMTP_TLS
              value: {{ .Values.smtp.tls | quote }}
            {{- if $additionalEnv }}
              {{- $additionalEnv | nindent 12 }}
            {{- end }}
          {{- if $additionalEnvFrom }}
          envFrom:
            {{- $additionalEnvFrom | indent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.port }}
          {{- if .Values.image.securityContext }}
          securityContext: {{- .Values.image.securityContext | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.image.probes.liveness.enabled }}
          livenessProbe:
            {{- if .Values.image.probes.liveness.custom }}
            {{- toYaml .Values.image.probes.liveness.custom | nindent 12 }}
            {{- else }}
            httpGet:
              path: /health/liveness
              port: {{ .Values.service.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.image.probes.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.image.probes.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.image.probes.liveness.periodSeconds }}
            successThreshold: {{ .Values.image.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.image.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.image.probes.readiness.enabled }}
          readinessProbe:
            {{- if .Values.image.probes.readiness.custom }}
            {{- toYaml .Values.image.probes.readiness.custom | nindent 12 }}
            {{- else }}
            httpGet:
              path: /health/readiness
              port: {{ .Values.service.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.image.probes.readiness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.image.probes.readiness.timeoutSeconds }}
            periodSeconds: {{ .Values.image.probes.readiness.periodSeconds }}
            successThreshold: {{ .Values.image.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.image.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.image.probes.startup.enabled }}
          startupProbe:
            {{- if .Values.image.probes.startup.custom }}
            {{- toYaml .Values.image.probes.startup.custom | nindent 12 }}
            {{- else }}
            httpGet:
              path: /health/liveness
              port: {{ .Values.service.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.image.probes.startup.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.image.probes.startup.timeoutSeconds }}
            periodSeconds: {{ .Values.image.probes.startup.periodSeconds }}
            successThreshold: {{ .Values.image.probes.startup.successThreshold }}
            failureThreshold: {{ .Values.image.probes.startup.failureThreshold }}
          {{- end }}
          {{- if .Values.image.resources }}
          resources: {{- toYaml .Values.image.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /tmp
              name: ephemeral
            {{- if $additionalVolumeMounts }}
              {{- $additionalVolumeMounts | nindent 12 }}
            {{- end }}
        {{- if $additionalSidecarContainers }}
          {{- $additionalSidecarContainers | nindent 8 }}
        {{- end }}
      volumes:
        - name: ephemeral
          {{- include "email-notification-provider.ephemeralVolume" . | indent 10 }}
        {{- if $additionalVolumes }}
          {{- $additionalVolumes | nindent 8 }}
        {{- end }}
