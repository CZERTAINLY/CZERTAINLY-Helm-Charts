{{- $additionalInitContainers := (include "api-gateway-kong.customization.initContainers" $) }}
{{- $additionalSidecarContainers := (include "api-gateway-kong.customization.sidecarContainers" $) }}
{{- $additionalVolumes := (include "api-gateway-kong.customization.volumes" $) }}
{{- $additionalVolumeMounts := (include "api-gateway-kong.customization.volumeMounts" $) }}
{{- $additionalEnv := (include "api-gateway-kong.customization.env" $) }}
{{- $additionalEnvFrom := (include "api-gateway-kong.customization.envFrom" $) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  labels:
    {{- include "api-gateway-kong.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api-gateway-kong.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api-gateway-kong.selectorLabels" . | nindent 8 }}
      annotations:
        # when the kong declarative config map is changed, restart deployment
        checksum/config: {{ include "api-gateway-kong.config.yml" (dict "global" .Values.global "apiGateway" .Values) | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- include "api-gateway-kong.imagePullSecrets" . | indent 6 }}
      {{- if .Values.podSecurityContext }}
      securityContext: {{- .Values.podSecurityContext | toYaml | nindent 8 }}
      {{- end }}
      {{- if $additionalInitContainers }}
      initContainers:
        {{- $additionalInitContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: api-gateway
          image: {{ include "api-gateway-kong.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.image.command }}
          command: {{- include "api-gateway-kong.image.command" . | nindent 12 }}
          {{- end }}
          {{- if .Values.image.args }}
          args: {{- include "api-gateway-kong.image.args" . | nindent 12 }}
          {{- end }}
          env:
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_PREFIX
              value: "/tmp/"
            - name: KONG_PROXY_ACCESS_LOG
              value: "/dev/stdout"
            - name: KONG_ADMIN_ACCESS_LOG
              value: "/dev/stdout"
            - name: KONG_PROXY_ERROR_LOG
              value: "/dev/stderr"
            - name: KONG_ADMIN_ERROR_LOG
              value: "/dev/stderr"
            - name: KONG_ADMIN_LISTEN
              value: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
            - name: KONG_DECLARATIVE_CONFIG
              value: "/kong/declarative/kong.yml"
            - name: KONG_PLUGINS
              value: "request-transformer,cors,file-log,response-transformer,post-function"
            - name: KONG_LOG_LEVEL
              value: {{ .Values.logging.level | quote }}
            {{- if .Values.trustedIps }}
            - name: KONG_TRUSTED_IPS
              value: {{ .Values.trustedIps | quote }}
            {{- end }}
            {{- if $additionalEnv }}
              {{- $additionalEnv | nindent 12 }}
            {{- end }}
          {{- if $additionalEnvFrom }}
          envFrom:
            {{- $additionalEnvFrom | indent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.service.consumer.port }}
              name: consumer-http
            - containerPort: {{ .Values.service.admin.port }}
              name: admin-http
          {{- if .Values.image.securityContext }}
          securityContext: {{- .Values.image.securityContext | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.image.probes.liveness.enabled }}
          livenessProbe:
            {{- if .Values.image.probes.liveness.custom }}
            {{- toYaml .Values.image.probes.liveness.custom | nindent 12 }}
            {{- else }}
            exec:
              command:
                - kong
                - health
            {{- end }}
            initialDelaySeconds: {{ .Values.image.probes.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.image.probes.liveness.timeoutSeconds }}
            periodSeconds: {{ .Values.image.probes.liveness.periodSeconds }}
            successThreshold: {{ .Values.image.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.image.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.image.probes.readiness.enabled }}
          readinessProbe:
            {{- if .Values.image.probes.readiness.custom }}
            {{- toYaml .Values.image.probes.readiness.custom | nindent 12 }}
            {{- else }}
            exec:
              command:
                - kong
                - health
            {{- end }}
            initialDelaySeconds: {{ .Values.image.probes.readiness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.image.probes.readiness.timeoutSeconds }}
            periodSeconds: {{ .Values.image.probes.readiness.periodSeconds }}
            successThreshold: {{ .Values.image.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.image.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.image.probes.startup.enabled }}
          startupProbe:
            {{- if .Values.image.probes.startup.custom }}
            {{- toYaml .Values.image.probes.startup.custom | nindent 12 }}
            {{- else }}
            exec:
              command:
                - kong
                - health
            {{- end }}
            initialDelaySeconds: {{ .Values.image.probes.startup.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.image.probes.startup.timeoutSeconds }}
            periodSeconds: {{ .Values.image.probes.startup.periodSeconds }}
            successThreshold: {{ .Values.image.probes.startup.successThreshold }}
            failureThreshold: {{ .Values.image.probes.startup.failureThreshold }}
          {{- end }}
          {{- if .Values.image.resources }}
          resources: {{- toYaml .Values.image.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: api-gateway-config-volume
              mountPath: /kong/declarative
            - mountPath: /tmp
              name: ephemeral
            {{- if $additionalVolumeMounts }}
              {{- $additionalVolumeMounts | nindent 12 }}
            {{- end }}
        {{- if $additionalSidecarContainers }}
          {{- $additionalSidecarContainers | nindent 8 }}
        {{- end }}
      volumes:
        - name: api-gateway-config-volume
          configMap:
            {{- if .Values.global.config.enabled }}
            name: global-configmap
            {{- else }}
            name: api-gateway-configmap
            {{- end }}
            items:
              - key: kong.yml
                path: kong.yml
        - name: ephemeral
          {{- include "api-gateway-kong.ephemeralVolume" . | indent 10 }}
        {{- if $additionalVolumes }}
          {{- $additionalVolumes | nindent 8 }}
        {{- end }}
