# Default values for api-gateway-kong.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  config:
    enabled: false
  image:
    registry: ""
    repository: ""
    # array of secret names
    pullSecrets: []
  volumes:
    ephemeral:
      type: ""
      sizeLimit: ""
      storageClassName: ""
      custom: {}
  hostName: ""
  keycloak:
    # if enabled, it has precedence from OIDC configuration
    enabled: false
    # client secret must be set if keycloak is enabled
    clientSecret: ""
  utils:
    enabled: false
  messaging:
    remoteAccess: false
  # additional init containers that will be added to each pod
  # - name: some-image
  #   image: some-image
  #   imagePullPolicy: IfNotPresent
  #   securityContext:
  #     runAsNonRoot: true
  #   ports:
  #     - name: port
  #       containerPort: "{{ $.Values.container.port }}"
  initContainers: []
  # additional sidecar containers that will be added to each pod
  # see the sample of init containers above
  sidecarContainers: []
  # additional volumes that will be added to each pod
  # - name: additional-volume
  #   configMap:
  #     name: additional-volume
  additionalVolumes: []
  # additional volume mounts that will be added to each pod
  # - name: additional-volume
  #   mountPath: /opt/app
  #   readOnly: true
  additionalVolumeMounts: []
  # additional service ports that will be added to each pod
  # - name: other-port
  #   port: 8080
  #   targetPort: 8080
  additionalPorts: []
  # additional environment variables that will be added to each pod
  additionalEnv:
    # - name: SOME_ENV
    #   value: "some-value"
    variables: []
    # list of config maps to be added as environment variables
    configMaps: []
    # list of secrets to be added as environment variables
    secrets: []

replicaCount: 1

image:
  # default registry name
  registry: docker.io
  repository: ""
  name: kong
  tag: 3.8.0
  # the digest to be used instead of the tag
  digest: ""
  pullPolicy: IfNotPresent
  # array of secret names
  pullSecrets: []
  # custom command and args
  command: []
  args: []
  # default security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 100
    readOnlyRootFilesystem: true
  # probes configuration
  probes:
    liveness:
      enabled: false
      # custom probe command, will override the default one
      custom: {}
      initialDelaySeconds: 5
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
    readiness:
      enabled: true
      # custom probe command, will override the default one
      custom: {}
      initialDelaySeconds: 5
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
    startup:
      enabled: true
      # custom probe command, will override the default one
      custom: {}
      initialDelaySeconds: 15
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 45
  resources: {}
    # We follow recommendations and general guidelines to manage resources from:
    # https://master.sdk.operatorframework.io/docs/best-practices/managing-resources/
    # We recommend default requests for CPU and Memory, leaving the limits as a conscious
    # choice for the user. If you do want to specify your own resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources'.
    # requests:
    #   cpu: 70m
    #   memory: 1100M
    # limits: {}

kubectl:
  image:
    # default registry name
    registry: docker.io
    repository: bitnami
    name: kubectl
    tag: 1.27.3
    # the digest to be used instead of the tag
    digest: ""
    pullPolicy: IfNotPresent
    # array of secret names
    pullSecrets: []
    # custom command and args
    command: []
    args: []
    # default security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 1001
      readOnlyRootFilesystem: true
    # it does not make sense to have probes for kubectl

# customization of the chart
initContainers: []
sidecarContainers: []
additionalVolumes: []
additionalVolumeMounts: []
additionalPorts: []
additionalEnv:
  variables: []
  configMaps: []
  secrets: []

volumes:
  ephemeral:
    # available types are: memory, storage, custom
    type: memory
    sizeLimit: "10Mi"
    storageClassName: ""
    custom: {}
    #  emptyDir:
    #    sizeLimit: "10Mi"
    #    medium: "Memory"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "api-gateway-sa"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

# kong admin and consumer ports
service:
  # See https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  admin:
    port: 8001
    # Node port to be exposed for admin service (only works with service.type: NodePort)
    # choose port between 30000-32767
    nodePort: ""
  consumer:
    port: 8000
    # Node port to be exposed for consumer service (only works with service.type: NodePort)
    # choose port between 30000-32767
    nodePort: ""

hostName: "czertainly.local"

backend:
  core:
    service:
      name: "core-service"
      port: 8080
      apiUrl: "/api"
  fe:
    service:
      name: "fe-administrator-service"
      port: 8080
      baseUrl: "/administrator"
      apiUrl: "/api"
      loginUrl: "/login"
      logoutUrl: "/logout"

logging:
  level: "info"
  request: false

# kong cors plugin: https://docs.konghq.com/hub/kong-inc/cors
cors:
  enabled: false
  # list of allowed domains for the Access-Control-Allow-Origin header
  origins:
    - '*'
  # list of values for the Access-Control-Expose-Headers header
  exposedHeaders:
    - X-Auth-Token

# https://docs.konghq.com/gateway/latest/reference/configuration/#trusted_ips
# To trust all IPs, set this value to "0.0.0.0/0,::/0"
trustedIps: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  # Custom declarative configuration for Kong
  custom: ""
  default: |-
    {{ .Files.Get "config/kong.yml" | indent 4 }}
