# Default values for pyadcs-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# Global parameters that will overwrite local parameters
global:
  image:
    registry: ""
    repository: ""
    # array of secret names
    pullSecrets: []
  volumes:
    ephemeral:
      type: ""
      sizeLimit: ""
      storageClassName: ""
      custom: {}
  database:
    type: ""
    host: ""
    port: ""
    name: ""
    username: ""
    password: ""
  trusted:
    certificates: ""
  httpProxy: ""
  httpsProxy: ""
  noProxy: ""
  # additional init containers that will be added to each pod
  # - name: some-image
  #   image: some-image
  #   imagePullPolicy: IfNotPresent
  #   securityContext:
  #     runAsNonRoot: true
  #   ports:
  #     - name: port
  #       containerPort: "{{ $.Values.container.port }}"
  initContainers: []
  # additional sidecar containers that will be added to each pod
  # see the sample of init containers above
  sidecarContainers: []
  # additional volumes that will be added to each pod
  # - name: additional-volume
  #   configMap:
  #     name: additional-volume
  additionalVolumes: []
  # additional volume mounts that will be added to each pod
  # - name: additional-volume
  #   mountPath: /opt/app
  #   readOnly: true
  additionalVolumeMounts: []
  # additional service ports that will be added to each pod
  # - name: other-port
  #   port: 8080
  #   targetPort: 8080
  additionalPorts: []
  # additional environment variables that will be added to each pod
  additionalEnv:
    # - name: SOME_ENV
    #   value: "some-value"
    variables: []
    # list of config maps to be added as environment variables
    configMaps: []
    # list of secrets to be added as environment variables
    secrets: []

database:
  # currently only postgresql is supported
  type: "postgresql"
  host: "host.docker.internal"
  port: 5432
  name: "czertainlydb"
  schema: "pyadcs"
  username: "czertainlyuser"
  password: "your-strong-password"

trusted:
  certificates: ""

httpProxy: ""
httpsProxy: ""
noProxy: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
replicaCount: 1

service:
  type: "ClusterIP"
  port: 8080

image:
  # default registry name
  registry: harbor.3key.company
  repository: czertainly
  name: czertainly-pyadcs-connector
  tag: 1.0.1
  # the digest to be used instead of the tag
  digest: ""
  pullPolicy: IfNotPresent
  # array of secret names
  pullSecrets: []
  # default security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 10001
    readOnlyRootFilesystem: true
  # probes configuration
  probes:
    liveness:
      enabled: false
      # custom probe command, will override the default one
      custom: {}
      initialDelaySeconds: 10
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
    readiness:
      enabled: true
      # custom probe command, will override the default one
      custom: {}
      initialDelaySeconds: 5
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
    startup:
      enabled: true
      # custom probe command, will override the default one
      custom: {}
      initialDelaySeconds: 10
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 10
  resources: {}
    # We follow recommendations and general guidelines to manage resources from:
    # https://master.sdk.operatorframework.io/docs/best-practices/managing-resources/
    # We recommend default requests for CPU and Memory, leaving the limits as a conscious
    # choice for the user. If you do want to specify your own resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources'.
    # requests:
    #   cpu: 100m
    #   memory: 400M
    # limits: {}

# customization of the chart
initContainers: []
sidecarContainers: []
additionalVolumes: []
additionalVolumeMounts: []
additionalPorts: []
additionalEnv:
  variables: []
  configMaps: []
  secrets: []

volumes:
  ephemeral:
    # available types are: memory, storage, custom
    type: memory
    sizeLimit: "1Mi"
    storageClassName: ""
    custom: {}
    #  emptyDir:
    #    sizeLimit: "10Mi"
    #    medium: "Memory"

logging:
  level: "INFO"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000
